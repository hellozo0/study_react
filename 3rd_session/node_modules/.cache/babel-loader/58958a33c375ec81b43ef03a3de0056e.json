{"ast":null,"code":"var _jsxFileName = \"/Users/anhyeonju/Desktop/likelion_react/3rd_session/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useReducer, useMemo, useCallback } from 'react';\nimport './App.css';\nimport CreateUser from './CreateUser';\nimport UserList from './UserList';\nimport useInputs from './hooks/useInputs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는 중 ...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [{\n    id: 1,\n    username: 'likelion1',\n    email: 'likelion1@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'likelion2',\n    email: 'likelion2@gmail.com',\n    active: true\n  }, {\n    id: 3,\n    username: 'likelion3',\n    email: 'likelion3@gmail.com',\n    active: true\n  }]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE_INPUT':\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.name]: action.value\n        }\n      };\n\n    case 'CREATE_USER':\n      return {\n        // inputs : initialState.inputs,\n        users: state.users.concat(action.user)\n      };\n\n    case 'TOGGLE_USER':\n      return {\n        // ...state,\n        users: state.users.map(user => user.id === action.id ? { ...user,\n          active: !user.active\n        } : user)\n      };\n\n    case 'REMOVE_USER':\n      return {\n        // ...state,\n        users: state.users.filter(user => user.id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n} //UserDispatch라는 이름으로 내보내줍니다.\n\n\nexport const UserDispatch = /*#__PURE__*/React.createContext(null);\n\nfunction App() {\n  _s();\n\n  // const [users, setUsers] = useState([\n  //   {\n  //     id:1,\n  //     username:'likelion1',\n  //     email:'likelion1@gmail.com',\n  //     active: true\n  //   },\n  //   {\n  //     id:2,\n  //     username:'likelion2',\n  //     email:'likelion2@gmail.com',\n  //     active: true\n  //   },\n  //   {\n  //     id:3,\n  //     username:'likelion3',\n  //     email:'likelion3@gmail.com',\n  //     active: true\n  //   }\n  // ]);\n  // const [inputs, setInputs] = useState({\n  //   username : '',\n  //   email:''\n  // });\n  // const { username, email } = inputs;\n  // const onChange = useCallback(e => {\n  //   const { name, value } = e.target;\n  //   setInputs(inputs => ({\n  //     ...inputs,\n  //     [name]: value\n  //   }));\n  // }, []);\n  // const onCreate = useCallback(() => {\n  //   const user = {\n  //     id: nextId.current,\n  //     username,\n  //     email\n  //   };\n  //   // setUsers([...users, user]);\n  //   setUsers( users => users.concat(user));\n  //   setInputs({\n  //     username:'',\n  //     email:''\n  //   });\n  //   nextId.current +=1;\n  // }, [username, email]);\n  // const onRemove = useCallback( id  => {\n  //   setUsers(users => users.filter(user => user.id !== id));\n  // },\n  // [users]\n  // );\n  // const onToggle = useCallback( \n  //   id => {\n  //   setUsers( users =>\n  //       users.map(user =>\n  //       user.id === id? {...user, active: !user.active} : user\n  //       )\n  //     );\n  // },[]);\n  // const count = useMemo(() => countActiveUsers(users), [users]);\n  const [{\n    username,\n    email\n  }, onChange, reset] = useInputs({\n    username: '',\n    email: ''\n  });\n  const [state, dispatch] = useReducer(reducer, initialState); // const {users} = state;\n  // const {username, email} = state.inputs;\n\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  const nextId = useRef(4);\n  const {\n    users\n  } = state; // const onChange = useCallback(e => {\n  //   const { name, value } = e.target;\n  //   dispatch({\n  //     type : 'CHANGE_INPUT',\n  //     name, \n  //     value\n  //   });\n  // }, []);\n\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    onReset();\n    nextId.current += 1;\n  }, [username, email, onReset]); // const onRemove = useCallback(id => {\n  //   dispatch({\n  //     type: 'REMOVE_USER',\n  //     id\n  //   });\n  // }, []);\n  // const onToggle = useCallback(id => {\n  //   dispatch({\n  //     type: 'TOGGLE_USER',\n  //     id\n  //   });\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(UserDispatch.Provider, {\n    value: dispatch,\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD65C\\uC131 \\uC0AC\\uC6A9\\uC790 \\uC218 : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"L9+HqY6A7YcYp/B11KJmh6H06As=\", false, function () {\n  return [useInputs];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anhyeonju/Desktop/likelion_react/3rd_session/src/App.js"],"names":["React","useRef","useReducer","useMemo","useCallback","CreateUser","UserList","useInputs","countActiveUsers","users","console","log","filter","user","active","length","initialState","inputs","username","email","id","reducer","state","action","type","name","value","concat","map","UserDispatch","createContext","App","onChange","reset","dispatch","count","nextId","onCreate","current","onReset"],"mappings":"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","sourcesContent":["import React, { useRef, useReducer, useMemo, useCallback } from 'react';\nimport './App.css';\nimport CreateUser from './CreateUser';\nimport UserList from './UserList';\nimport useInputs from './hooks/useInputs';\n\nfunction countActiveUsers(users){\n  console.log('활성 사용자 수를 세는 중 ...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username : '',\n    email: ''\n  },\n\n  users : [\n    {\n      id:1,\n      username:'likelion1',\n      email:'likelion1@gmail.com',\n      active: true\n    },\n    {\n      id:2,\n      username:'likelion2',\n      email:'likelion2@gmail.com',\n      active: true\n    },\n    {\n      id:3,\n      username:'likelion3',\n      email:'likelion3@gmail.com',\n      active: true\n    }\n  ]\n};\n\n\nfunction reducer(state, action){\n  switch (action.type) {\n    case 'CHANGE_INPUT':\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.name] : action.value\n        }\n        \n      };\n    case 'CREATE_USER':\n      return {\n        // inputs : initialState.inputs,\n        users: state.users.concat(action.user)\n      };\n    case 'TOGGLE_USER' :\n      return {\n        // ...state,\n        users: state.users.map(user => \n          user.id === action.id ? { ...user, active: !user.active} : user)\n      };\n    case 'REMOVE_USER' :\n      return {\n        // ...state,\n        users: state.users.filter(user => user.id !== action.id)\n      };\n    default:\n      return state;\n  }\n}\n\n//UserDispatch라는 이름으로 내보내줍니다.\nexport const UserDispatch = React.createContext(null);\n\n\nfunction App() {\n  // const [users, setUsers] = useState([\n  //   {\n  //     id:1,\n  //     username:'likelion1',\n  //     email:'likelion1@gmail.com',\n  //     active: true\n  //   },\n  //   {\n  //     id:2,\n  //     username:'likelion2',\n  //     email:'likelion2@gmail.com',\n  //     active: true\n  //   },\n  //   {\n  //     id:3,\n  //     username:'likelion3',\n  //     email:'likelion3@gmail.com',\n  //     active: true\n  //   }\n  // ]);\n\n  // const [inputs, setInputs] = useState({\n  //   username : '',\n  //   email:''\n  // });\n\n  // const { username, email } = inputs;\n\n  // const onChange = useCallback(e => {\n  //   const { name, value } = e.target;\n  //   setInputs(inputs => ({\n  //     ...inputs,\n  //     [name]: value\n  //   }));\n  // }, []);\n\n\n\n\n  // const onCreate = useCallback(() => {\n  //   const user = {\n  //     id: nextId.current,\n  //     username,\n  //     email\n  //   };\n  //   // setUsers([...users, user]);\n  //   setUsers( users => users.concat(user));\n\n  //   setInputs({\n  //     username:'',\n  //     email:''\n  //   });\n  //   nextId.current +=1;\n  // }, [username, email]);\n\n\n  \n\n\n\n\n  // const onRemove = useCallback( id  => {\n  //   setUsers(users => users.filter(user => user.id !== id));\n  // },\n  // [users]\n  // );\n\n\n\n  // const onToggle = useCallback( \n  //   id => {\n  //   setUsers( users =>\n  //       users.map(user =>\n  //       user.id === id? {...user, active: !user.active} : user\n  //       )\n  //     );\n  // },[]);\n\n\n\n\n\n  \n  // const count = useMemo(() => countActiveUsers(users), [users]);\n\n  const [{username, email}, onChange, reset] = useInputs({\n    username: '',\n    email: ''\n  });\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  // const {users} = state;\n  // const {username, email} = state.inputs;\n  const count = useMemo(() => countActiveUsers(users),  [users] );\n  const nextId = useRef(4);\n\n  const {users} = state;\n  \n\n  // const onChange = useCallback(e => {\n  //   const { name, value } = e.target;\n  //   dispatch({\n  //     type : 'CHANGE_INPUT',\n  //     name, \n  //     value\n  //   });\n  // }, []);\n\n\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    onReset();\n    nextId.current  += 1;\n  }, [username, email, onReset]);\n  \n  // const onRemove = useCallback(id => {\n  //   dispatch({\n  //     type: 'REMOVE_USER',\n  //     id\n  //   });\n  // }, []);\n\n\n  // const onToggle = useCallback(id => {\n  //   dispatch({\n  //     type: 'TOGGLE_USER',\n  //     id\n  //   });\n  // }, []);\n  \n\n  return (\n    <UserDispatch.Provider value={dispatch}>\n      <CreateUser\n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      {/* <UserList users={users} onRemove={onRemove} onToggle={onToggle}/> */}\n      <UserList users={users}/>\n      <div>활성 사용자 수 : {count}</div>\n    </UserDispatch.Provider>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}