{"ast":null,"code":"var _jsxFileName = \"/Users/anhyeonju/Desktop/likelion_react/3rd_session/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useReducer, useMemo, useCallback } from 'react';\nimport './App.css';\nimport CreateUser from './CreateUser';\nimport UserList from './UserList';\nimport useInputs from './hooks/useInputs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는 중 ...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [{\n    id: 1,\n    username: 'likelion1',\n    email: 'likelion1@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'likelion2',\n    email: 'likelion2@gmail.com',\n    active: true\n  }, {\n    id: 3,\n    username: 'likelion3',\n    email: 'likelion3@gmail.com',\n    active: true\n  }]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE_INPUT':\n      return {\n        // ...state,\n        // inputs: {\n        //   ...state.inputs,\n        //   [action.name] : action.value\n        // }\n        users: state.users.concat(action.user)\n      };\n\n    case 'CREATE_USER':\n      return {\n        inputs: initialState.inputs,\n        users: state.users.concat(action.user)\n      };\n\n    case 'TOGGLE_USER':\n      return { ...state,\n        users: state.users.mao(user => user.id === action.id ? { ...user,\n          active: !user.active\n        } : user)\n      };\n\n    case 'REMOVE_USER':\n      return { ...state,\n        users: state.users.filter(user => user.id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  _s();\n\n  // const [users, setUsers] = useState([\n  //   {\n  //     id:1,\n  //     username:'likelion1',\n  //     email:'likelion1@gmail.com',\n  //     active: true\n  //   },\n  //   {\n  //     id:2,\n  //     username:'likelion2',\n  //     email:'likelion2@gmail.com',\n  //     active: true\n  //   },\n  //   {\n  //     id:3,\n  //     username:'likelion3',\n  //     email:'likelion3@gmail.com',\n  //     active: true\n  //   }\n  // ]);\n  // const [inputs, setInputs] = useState({\n  //   username : '',\n  //   email:''\n  // });\n  // const { username, email } = inputs;\n  // const onChange = useCallback(e => {\n  //   const { name, value } = e.target;\n  //   setInputs(inputs => ({\n  //     ...inputs,\n  //     [name]: value\n  //   }));\n  // }, []);\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch({\n      type: 'CHANGE_INPUT',\n      name,\n      value\n    });\n  }, []);\n  const nextId = useRef(4); // const onCreate = useCallback(() => {\n  //   const user = {\n  //     id: nextId.current,\n  //     username,\n  //     email\n  //   };\n  //   // setUsers([...users, user]);\n  //   setUsers( users => users.concat(user));\n  //   setInputs({\n  //     username:'',\n  //     email:''\n  //   });\n  //   nextId.current +=1;\n  // }, [username, email]);\n\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    nextId.current += 1;\n  }, [username, email]); // const onRemove = useCallback( id  => {\n  //   setUsers(users => users.filter(user => user.id !== id));\n  // },\n  // [users]\n  // );\n\n  const onRemove = useCallback(id => {\n    dispatch({\n      type: 'REMOVE_USER',\n      id\n    });\n  }, []); // const onToggle = useCallback( \n  //   id => {\n  //   setUsers( users =>\n  //       users.map(user =>\n  //       user.id === id? {...user, active: !user.active} : user\n  //       )\n  //     );\n  // },[]);\n\n  const onToggle = useCallback(id => {\n    dispatch({\n      type: 'TOGGLE_USER',\n      id\n    });\n  }, []); // const count = useMemo(() => countActiveUsers(users), [users]);\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    users\n  } = state;\n  const {\n    username,\n    email\n  } = state.inputs;\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD65C\\uC131 \\uC0AC\\uC6A9\\uC790 \\uC218 : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"HnW5betBrN2gBZcD5St4ABWUcMU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anhyeonju/Desktop/likelion_react/3rd_session/src/App.js"],"names":["React","useRef","useReducer","useMemo","useCallback","CreateUser","UserList","useInputs","countActiveUsers","users","console","log","filter","user","active","length","initialState","inputs","username","email","id","reducer","state","action","type","concat","mao","App","onChange","e","name","value","target","dispatch","nextId","onCreate","current","onRemove","onToggle","count"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,OAApC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,SAAOF,KAAK,CAACG,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,MAA1B,EAAkCC,MAAzC;AACD;;AAED,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAG,EADL;AAENC,IAAAA,KAAK,EAAE;AAFD,GADW;AAMnBV,EAAAA,KAAK,EAAG,CACN;AACEW,IAAAA,EAAE,EAAC,CADL;AAEEF,IAAAA,QAAQ,EAAC,WAFX;AAGEC,IAAAA,KAAK,EAAC,qBAHR;AAIEL,IAAAA,MAAM,EAAE;AAJV,GADM,EAON;AACEM,IAAAA,EAAE,EAAC,CADL;AAEEF,IAAAA,QAAQ,EAAC,WAFX;AAGEC,IAAAA,KAAK,EAAC,qBAHR;AAIEL,IAAAA,MAAM,EAAE;AAJV,GAPM,EAaN;AACEM,IAAAA,EAAE,EAAC,CADL;AAEEF,IAAAA,QAAQ,EAAC,WAFX;AAGEC,IAAAA,KAAK,EAAC,qBAHR;AAIEL,IAAAA,MAAM,EAAE;AAJV,GAbM;AANW,CAArB;;AA6BA,SAASO,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAC7B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAO;AACL;AACA;AACA;AACA;AACA;AACAf,QAAAA,KAAK,EAAEa,KAAK,CAACb,KAAN,CAAYgB,MAAZ,CAAmBF,MAAM,CAACV,IAA1B;AANF,OAAP;;AAQF,SAAK,aAAL;AACE,aAAO;AACLI,QAAAA,MAAM,EAAGD,YAAY,CAACC,MADjB;AAELR,QAAAA,KAAK,EAAEa,KAAK,CAACb,KAAN,CAAYgB,MAAZ,CAAmBF,MAAM,CAACV,IAA1B;AAFF,OAAP;;AAIF,SAAK,aAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELb,QAAAA,KAAK,EAAEa,KAAK,CAACb,KAAN,CAAYiB,GAAZ,CAAgBb,IAAI,IACzBA,IAAI,CAACO,EAAL,KAAYG,MAAM,CAACH,EAAnB,GAAwB,EAAE,GAAGP,IAAL;AAAWC,UAAAA,MAAM,EAAE,CAACD,IAAI,CAACC;AAAzB,SAAxB,GAA2DD,IADtD;AAFF,OAAP;;AAKF,SAAK,aAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELb,QAAAA,KAAK,EAAEa,KAAK,CAACb,KAAN,CAAYG,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACO,EAAL,KAAYG,MAAM,CAACH,EAA9C;AAFF,OAAP;;AAIF;AACE,aAAOE,KAAP;AA3BJ;AA6BD;;AAED,SAASK,GAAT,GAAe;AAAA;;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,QAAQ,GAAGxB,WAAW,CAACyB,CAAC,IAAI;AAChC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAC,IAAAA,QAAQ,CAAC;AACPT,MAAAA,IAAI,EAAG,cADA;AAEPM,MAAAA,IAFO;AAGPC,MAAAA;AAHO,KAAD,CAAR;AAKD,GAP2B,EAOzB,EAPyB,CAA5B;AAWA,QAAMG,MAAM,GAAGjC,MAAM,CAAC,CAAD,CAArB,CAhDa,CAiDb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMkC,QAAQ,GAAG/B,WAAW,CAAC,MAAM;AACjC6B,IAAAA,QAAQ,CAAC;AACPT,MAAAA,IAAI,EAAE,aADC;AAEPX,MAAAA,IAAI,EAAE;AACJO,QAAAA,EAAE,EAAEc,MAAM,CAACE,OADP;AAEJlB,QAAAA,QAFI;AAGJC,QAAAA;AAHI;AAFC,KAAD,CAAR;AAQAe,IAAAA,MAAM,CAACE,OAAP,IAAmB,CAAnB;AACD,GAV2B,EAUzB,CAAClB,QAAD,EAAWC,KAAX,CAVyB,CAA5B,CAjEa,CAiFb;AACA;AACA;AACA;AACA;;AACF,QAAMkB,QAAQ,GAAGjC,WAAW,CAACgB,EAAE,IAAI;AACjCa,IAAAA,QAAQ,CAAC;AACPT,MAAAA,IAAI,EAAE,aADC;AAEPJ,MAAAA;AAFO,KAAD,CAAR;AAID,GAL2B,EAKzB,EALyB,CAA5B,CAtFe,CA8Fb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF,QAAMkB,QAAQ,GAAGlC,WAAW,CAACgB,EAAE,IAAI;AACjCa,IAAAA,QAAQ,CAAC;AACPT,MAAAA,IAAI,EAAE,aADC;AAEPJ,MAAAA;AAFO,KAAD,CAAR;AAID,GAL2B,EAKzB,EALyB,CAA5B,CAvGe,CAkHb;;AAGA,QAAM,CAACE,KAAD,EAAQW,QAAR,IAAoB/B,UAAU,CAACmB,OAAD,EAAUL,YAAV,CAApC;AACA,QAAM;AAACP,IAAAA;AAAD,MAAUa,KAAhB;AACA,QAAM;AAACJ,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAoBG,KAAK,CAACL,MAAhC;AACA,QAAMsB,KAAK,GAAGpC,OAAO,CAAC,MAAMK,gBAAgB,CAACC,KAAD,CAAvB,EAAiC,CAACA,KAAD,CAAjC,CAArB;AAEA,sBACE;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAES,QADZ;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,QAAQ,EAAES,QAHZ;AAIE,MAAA,QAAQ,EAAEO;AAJZ;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE1B,KAAjB;AAAwB,MAAA,QAAQ,EAAE4B,QAAlC;AAA4C,MAAA,QAAQ,EAAEC;AAAtD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,8DAAiBC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAaD;;GAvIQZ,G;;KAAAA,G;AAyIT,eAAeA,GAAf","sourcesContent":["import React, { useRef, useReducer, useMemo, useCallback } from 'react';\nimport './App.css';\nimport CreateUser from './CreateUser';\nimport UserList from './UserList';\nimport useInputs from './hooks/useInputs';\n\nfunction countActiveUsers(users){\n  console.log('활성 사용자 수를 세는 중 ...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username : '',\n    email: ''\n  },\n\n  users : [\n    {\n      id:1,\n      username:'likelion1',\n      email:'likelion1@gmail.com',\n      active: true\n    },\n    {\n      id:2,\n      username:'likelion2',\n      email:'likelion2@gmail.com',\n      active: true\n    },\n    {\n      id:3,\n      username:'likelion3',\n      email:'likelion3@gmail.com',\n      active: true\n    }\n  ]\n};\n\n\nfunction reducer(state, action){\n  switch (action.type) {\n    case 'CHANGE_INPUT':\n      return {\n        // ...state,\n        // inputs: {\n        //   ...state.inputs,\n        //   [action.name] : action.value\n        // }\n        users: state.users.concat(action.user)\n      };\n    case 'CREATE_USER':\n      return {\n        inputs : initialState.inputs,\n        users: state.users.concat(action.user)\n      };\n    case 'TOGGLE_USER' :\n      return {\n        ...state,\n        users: state.users.mao(user => \n          user.id === action.id ? { ...user, active: !user.active} : user)\n      };\n    case 'REMOVE_USER' :\n      return {\n        ...state,\n        users: state.users.filter(user => user.id !== action.id)\n      };\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  // const [users, setUsers] = useState([\n  //   {\n  //     id:1,\n  //     username:'likelion1',\n  //     email:'likelion1@gmail.com',\n  //     active: true\n  //   },\n  //   {\n  //     id:2,\n  //     username:'likelion2',\n  //     email:'likelion2@gmail.com',\n  //     active: true\n  //   },\n  //   {\n  //     id:3,\n  //     username:'likelion3',\n  //     email:'likelion3@gmail.com',\n  //     active: true\n  //   }\n  // ]);\n\n  // const [inputs, setInputs] = useState({\n  //   username : '',\n  //   email:''\n  // });\n\n  // const { username, email } = inputs;\n\n  // const onChange = useCallback(e => {\n  //   const { name, value } = e.target;\n  //   setInputs(inputs => ({\n  //     ...inputs,\n  //     [name]: value\n  //   }));\n  // }, []);\n\n  const onChange = useCallback(e => {\n    const { name, value } = e.target;\n    dispatch({\n      type : 'CHANGE_INPUT',\n      name, \n      value\n    });\n  }, []);\n\n\n\n  const nextId = useRef(4);\n  // const onCreate = useCallback(() => {\n  //   const user = {\n  //     id: nextId.current,\n  //     username,\n  //     email\n  //   };\n  //   // setUsers([...users, user]);\n  //   setUsers( users => users.concat(user));\n\n  //   setInputs({\n  //     username:'',\n  //     email:''\n  //   });\n  //   nextId.current +=1;\n  // }, [username, email]);\n\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    nextId.current  += 1;\n  }, [username, email]);\n  \n\n\n\n\n  // const onRemove = useCallback( id  => {\n  //   setUsers(users => users.filter(user => user.id !== id));\n  // },\n  // [users]\n  // );\nconst onRemove = useCallback(id => {\n  dispatch({\n    type: 'REMOVE_USER',\n    id\n  });\n}, []);\n\n\n  // const onToggle = useCallback( \n  //   id => {\n  //   setUsers( users =>\n  //       users.map(user =>\n  //       user.id === id? {...user, active: !user.active} : user\n  //       )\n  //     );\n  // },[]);\n\nconst onToggle = useCallback(id => {\n  dispatch({\n    type: 'TOGGLE_USER',\n    id\n  });\n}, []);\n\n\n\n\n  \n  // const count = useMemo(() => countActiveUsers(users), [users]);\n\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {users} = state;\n  const {username, email} = state.inputs;\n  const count = useMemo(() => countActiveUsers(users),  [users] );\n\n  return (\n    <>\n      <CreateUser\n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      <UserList users={users} onRemove={onRemove} onToggle={onToggle}/>\n      <div>활성 사용자 수 : {count}</div>\n    </>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}