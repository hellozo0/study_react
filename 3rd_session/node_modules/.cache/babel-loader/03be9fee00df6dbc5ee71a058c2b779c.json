{"ast":null,"code":"var _jsxFileName = \"/Users/anhyeonju/Desktop/likelion_react/3rd_session/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useReducer, useMemo, useCallback } from 'react';\nimport './App.css';\nimport CreateUser from './CreateUser';\nimport UserList from './UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는 중 ...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [{\n    id: 1,\n    username: 'likelion1',\n    email: 'likelion1@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'likelion2',\n    email: 'likelion2@gmail.com',\n    active: true\n  }, {\n    id: 3,\n    username: 'likelion3',\n    email: 'likelion3@gmail.com',\n    active: true\n  }]\n};\n\nfunction App() {\n  _s();\n\n  const [users, setUsers] = useState([{\n    id: 1,\n    username: 'likelion1',\n    email: 'likelion1@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'likelion2',\n    email: 'likelion2@gmail.com',\n    active: true\n  }, {\n    id: 3,\n    username: 'likelion3',\n    email: 'likelion3@gmail.com',\n    active: true\n  }]);\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: ''\n  });\n  const {\n    username,\n    email\n  } = inputs;\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(inputs => ({ ...inputs,\n      [name]: value\n    }));\n  }, []);\n  const nextId = useRef(4);\n  const onCreate = useCallback(() => {\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    }; // setUsers([...users, user]);\n\n    setUsers(users => users.concat(user));\n    setInputs({\n      username: '',\n      email: ''\n    });\n    nextId.current += 1;\n  }, [username, email]);\n  const onRemove = useCallback(id => {\n    setUsers(users => users.filter(user => user.id !== id));\n  }, [users]);\n  const onToggle = useCallback(id => {\n    setUsers(users => users.map(user => user.id === id ? { ...user,\n      active: !user.active\n    } : user));\n  }, []);\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD65C\\uC131 \\uC0AC\\uC6A9\\uC790 \\uC218 : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Kqm0K2p9NW8KYeKrihin5WhcaSU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/anhyeonju/Desktop/likelion_react/3rd_session/src/App.js"],"names":["React","useRef","useReducer","useMemo","useCallback","CreateUser","UserList","countActiveUsers","users","console","log","filter","user","active","length","initialState","inputs","username","email","id","App","setUsers","useState","setInputs","onChange","e","name","value","target","nextId","onCreate","current","concat","onRemove","onToggle","map","count"],"mappings":"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","sourcesContent":["import React, { useRef, useReducer, useMemo, useCallback } from 'react';\nimport './App.css';\nimport CreateUser from './CreateUser';\nimport UserList from './UserList';\n\nfunction countActiveUsers(users){\n  console.log('활성 사용자 수를 세는 중 ...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  inputs: {\n    username : '',\n    email: ''\n  },\n\n  users : [\n    {\n      id:1,\n      username:'likelion1',\n      email:'likelion1@gmail.com',\n      active: true\n    },\n    {\n      id:2,\n      username:'likelion2',\n      email:'likelion2@gmail.com',\n      active: true\n    },\n    {\n      id:3,\n      username:'likelion3',\n      email:'likelion3@gmail.com',\n      active: true\n    }\n  ]\n}\n\n\nfunction App() {\n  const [users, setUsers] = useState([\n    {\n      id:1,\n      username:'likelion1',\n      email:'likelion1@gmail.com',\n      active: true\n    },\n    {\n      id:2,\n      username:'likelion2',\n      email:'likelion2@gmail.com',\n      active: true\n    },\n    {\n      id:3,\n      username:'likelion3',\n      email:'likelion3@gmail.com',\n      active: true\n    }\n  ]);\n\n  const [inputs, setInputs] = useState({\n    username : '',\n    email:''\n  });\n\n  const { username, email } = inputs;\n\n  const onChange = useCallback(e => {\n    const { name, value } = e.target;\n    setInputs(inputs => ({\n      ...inputs,\n      [name]: value\n    }));\n  }, []);\n\n\n\n\n  const nextId = useRef(4);\n  const onCreate = useCallback(() => {\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    };\n    // setUsers([...users, user]);\n    setUsers( users => users.concat(user));\n\n    setInputs({\n      username:'',\n      email:''\n    });\n    nextId.current +=1;\n  }, [username, email]);\n\n\n\n  const onRemove = useCallback( id  => {\n    setUsers(users => users.filter(user => user.id !== id));\n  },\n  [users]\n  );\n\n\n\n  const onToggle = useCallback( \n    id => {\n    setUsers( users =>\n        users.map(user =>\n        user.id === id? {...user, active: !user.active} : user\n        )\n      );\n  },[]);\n\n  \n  const count = useMemo(() => countActiveUsers(users), [users]);\n\n  return (\n    <>\n      <CreateUser\n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      <UserList users={users} onRemove={onRemove} onToggle={onToggle}/>\n      <div>활성 사용자 수 : {count}</div>\n    </>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}